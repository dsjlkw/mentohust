name: Build mentohust for OpenWrt

on:
  release:
    types: published
  push:
    branches:
      - 'main'

env:
  IPKG_VERSION: 3.0.0
  APT_URL: https://gist.githubusercontent.com/csrutil/6d83b7dd62b5652697fe22271fbee482/raw/5149abcc3ca3ee48f95978949db528d6bf765daa/depends-ubuntu-2004

jobs:
  build_ipk:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        sdk_url:
          - https://downloads.openwrt.org/releases/21.02.1/targets/x86/64/openwrt-sdk-21.02.1-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/21.02.1/targets/x86/generic/openwrt-sdk-21.02.1-x86-generic_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/21.02.1/targets/rockchip/armv8/openwrt-sdk-21.02.1-rockchip-armv8_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/21.02.1/targets/ipq40xx/generic/openwrt-sdk-21.02.1-ipq40xx-generic_gcc-8.4.0_musl_eabi.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/21.02.1/targets/ramips/mt76x8/openwrt-sdk-21.02.1-ramips-mt76x8_gcc-8.4.0_musl.Linux-x86_64.tar.xz
          - https://downloads.openwrt.org/releases/21.02.1/targets/ath79/generic/openwrt-sdk-21.02.1-ath79-generic_gcc-8.4.0_musl.Linux-x86_64.tar.xz

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL $APT_URL) tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Download SDK
      run: |
        url=${{ matrix.sdk_url }}
        sdk=$(basename $url | awk -F '.tar.xz' '{ print $1 }')

        wget $url
        tar xvf $sdk.tar.xz

    - name: Patch file
      run: |

        url=${{ matrix.sdk_url }}
        sdk=$(basename $url | awk -F '.tar.xz' '{ print $1 }')

        cd $sdk/package
        git clone https://github.com/dsjlkw/mentohust.git /tmp/mentohust
        cp -r /tmp/mentohust/packages/mentohust .
        cp /tmp/mentohust/dl/mentohust-0.3.1.tar.gz ../dl/

        # optimization
        sed -i '/package.mk/a CONFIGURE_ARGS += --with-openssl --with-zstd' Makefile

    - name: Compile
      run: |
        url=${{ matrix.sdk_url }}
        sdk=$(basename $url | awk -F '.tar.xz' '{ print $1 }')

        cd $sdk

        [[ $url == *'targets/x86'* ]] && sed -i 's/-Os -pipe/-O3 -pipe -march=x86-64/g' Config-build.in
        [[ $url == *'targets/x86'* ]] && sed -i 's/-Os -pipe/-O3 -pipe -march=x86-64/g' include/target.mk

        [[ $url == *'targets/rockchip'* ]] && sed -i 's/-Os -pipe/-O3 -pipe -march=armv8-a+crypto+crc -mcpu=cortex-a53+crypto+crc -mtune=cortex-a53/g' Config-build.in
        [[ $url == *'targets/rockchip'* ]] && sed -i 's/-Os -pipe/-O3 -pipe -march=armv8-a+crypto+crc -mcpu=cortex-a53+crypto+crc -mtune=cortex-a53/g' include/target.mk

        echo 'CONFIG_PACKAGE_mentohust=m' > .config
        make defconfig

        cat .config | grep CONFIG_TARGET_OPTIMIZATION

        make package/mentohust/compile -j$(nproc) || make package/mentohust/compile -j1 V=sc

        # cp file to artifact
        cd ${{ github.workspace }}
        mkdir -p ${{ github.workspace }}/artifact
        for ipk in `find . -name 'mentohust*.ipk'`; do
          cp $ipk ${{ github.workspace }}/artifact/
        done

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.IPKG_VERSION }}
        path: ${{ github.workspace }}/artifact/**/*

  deploy:
    needs: [build_ipk]
    name: Create release and upload artifacts
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.IPKG_VERSION }}

    - name: Upload build artifacts to cloud
      run: |
        mkdir -p ${{ github.workspace }}/artifact
        for ipk in `find . -name '*.ipk'`; do
          mv $ipk ${{ github.workspace }}/artifact
        done

        md5sum artifact/*.ipk > release.txt
        echo "Please check the stock releases at https://downloads.openwrt.org/releases/" >> release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
      with:
        name: ${{ env.IPKG_VERSION }}
        tag_name: ${{ env.IPKG_VERSION }}
        body_path: release.txt
        files: artifact/**/*

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
        name: ${{ env.IPKG_VERSION }}
